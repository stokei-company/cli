import { Injectable } from '@nestjs/common';
import { QueryBus } from '@nestjs/cqrs';
import { IBaseService, IPaginatedType } from '@stokei/nestjs';
import { <%= props.table.pascalCaseSingularName %>Model } from '@/models/<%= props.table.kebabCaseSingularName %>.model';
import { FindAll<%= props.table.pascalCasePluralName %>DTO } from '@/dtos/<%= props.table.kebabCasePluralName %>/find-all-<%= props.table.kebabCasePluralName %>.dto';
import { FindAll<%= props.table.pascalCasePluralName %>Query } from '@/queries/implements/<%= props.table.kebabCasePluralName %>/find-all-<%= props.table.kebabCasePluralName %>.query';

@Injectable()
export class FindAll<%= props.table.pascalCasePluralName %>Service
  implements IBaseService<FindAll<%= props.table.pascalCasePluralName %>DTO, Promise<IPaginatedType<<%= props.table.pascalCaseSingularName %>Model>>>
{
  constructor(private readonly queryBus: QueryBus) {}

  async execute(data: FindAll<%= props.table.pascalCasePluralName %>DTO): Promise<IPaginatedType<<%= props.table.pascalCaseSingularName %>Model>> {
    return await this.queryBus.execute(new FindAll<%= props.table.pascalCasePluralName %>Query(data));
  }
}
