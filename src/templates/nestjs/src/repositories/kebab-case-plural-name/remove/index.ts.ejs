import { Injectable } from '@nestjs/common';
import { PrismaClient } from '@/database/prisma/client';
import { IBaseRepository } from '@stokei/nestjs';
import { Remove<%= props.table.pascalCaseSingularName %>DTO } from '@/dtos/<%= props.table.kebabCasePluralName %>/remove-<%= props.table.kebabCaseSingularName %>.dto';

@Injectable()
export class Remove<%= props.table.pascalCaseSingularName %>Repository
  implements
    IBaseRepository<Remove<%= props.table.pascalCaseSingularName %>DTO, Promise<boolean>>
{
  constructor(private readonly model: PrismaClient) {}

  async execute({ where }: Remove<%= props.table.pascalCaseSingularName %>DTO): Promise<boolean> {
    const removed = await this.model.<%= props.table.camelCaseSingularName %>.delete({
      where: {
        id: where?.<%= props.table.camelCaseSingularName %>Id
      },
    });
    return !!removed;
  }
}
