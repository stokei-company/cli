version: '3.8'

networks:
  stokei-network:
    driver: bridge

volumes:
  rabbitmq-data:
  rabbitmq-etc:
  rabbitmq-logs:
  postgresql-data:
services:
  microservice:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        NODE_ENV: development
        DB_URL: postgresql://dev:dev@host.docker.internal:5432/<%= props.projectName.kebabCasePluralName %>?schema=public
    container_name: microservice
    ports:
      - '4010:3000'
    environment:
      - MICROSERVICE_URL=amqp://admin:admin@rabbitmq:5672
      - DB_URL=postgresql://dev:dev@postgresql:5432/<%= props.projectName.kebabCasePluralName %>?schema=public
      - HOST=microservice
      - PORT=3000
      - URL=http://microservice:3000
      - GRAPHQL_URL=http://microservice:3000/graphql
    restart: on-failure
    volumes:
      - ./:/app/
    depends_on:
      - rabbitmq
      - postgresql
    networks:
      - stokei-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
      - rabbitmq-etc:/etc/rabbitmq/
      - rabbitmq-data:/var/lib/rabbitmq/
      - rabbitmq-logs:/var/log/rabbitmq/
    environment:
      RABBITMQ_ERLANG_COOKIE: anyerlangcookie
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - stokei-network

  postgresql:
    image: bitnami/postgresql:latest
    container_name: postgresql
    environment:
      POSTGRESQL_USERNAME: dev
      POSTGRESQL_PASSWORD: dev
    ports:
      - '5432:5432'
    volumes:
      - postgresql-data:/bitnami/postgresql
    networks:
      - stokei-network
